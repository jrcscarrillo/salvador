<!-- begin of generated class -->
<?php
/*
*
* -------------------------------------------------------
* CLASSNAME:        posiciones
* GENERATION DATE:  22.03.2020
* CLASS FILE:       C:\wamp64\www\genera_clase/generated_classes/class.posiciones.php
* FOR MYSQL TABLE:  posiciones
* FOR MYSQL DB:     coopdb
* -------------------------------------------------------
* CODE GENERATED BY:
* MY PHP-MYSQL-CLASS GENERATOR
* from: >> www.voegeli.li >> (download for free!)
* modify: >> www.aurora-ec.net >> (download for free!)
* -------------------------------------------------------
*
*/

class Posiciones extends \Phalcon\Mvc\Model
{


    // **********************
    // ATTRIBUTE DECLARATION
    // **********************

    protected $ClienteID;
    protected $ClienteNombre;
    protected $VendedorID;
    protected $VendedorNombre;


    public function __construct()
    {
    }

    // **********************
    // GETTER METHODS
    // **********************


    function getClienteID()
    {
        return $this->ClienteID;
    }

    function getClienteNombre()
    {
        return $this->ClienteNombre;
    }

    function getVendedorID()
    {
        return $this->VendedorID;
    }

    function getVendedorNombre()
    {
        return $this->VendedorNombre;
    }

    // **********************
    // SETTER METHODS
    // **********************


    function setClienteID($val)
    {
        $this->ClienteID =  $val;
    }

    function setClienteNombre($val)
    {
        $this->ClienteNombre =  $val;
    }

    function setVendedorID($val)
    {
        $this->VendedorID =  $val;
    }

    function setVendedorNombre($val)
    {
        $this->VendedorNombre =  $val;
    }


    /**
     * Initialize method for model.
     */
    public function initialize()
    {
        $this->setSchema("mecanica");
        $this->setSource("posiciones");
    }

    /**
     * Returns table name mapped in the model.
     *
     * @return string
     */
    public function getSource()
    {
        return 'posiciones';
    }

    public static function find($parameters = null)
    {
        return parent::find($parameters);
    }

    public static function findFirst($parameters = null)
    {
        return parent::findFirst($parameters);
    }
}
